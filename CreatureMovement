using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CreatureMovement : MonoBehaviour {

    public float movePower = 1f;
    public int CreatureType;
    public int score;

    public bool isTracing;
    bool isDie = false;

    Animator animator;
    Vector3 movement;
    GameObject traceTarget;
    int movementFlag = 0; //0:idle, 1:left, 2:right

    //override function

	// Use this for initialization
	void Start () {
        animator = gameObject.GetComponentInChildren<Animator>();

        StartCoroutine("ChangeMovement");
	}

    //coroutine
    IEnumerator ChangeMovement()
    {
        //RANDOM CHANGE MOVEMENT
        movementFlag = Random.Range(0, 3);

        //mapping animation
        //wait 3 seconds
        yield return new WaitForSeconds(1f);

        //start logic
        StartCoroutine("ChangeMovement");
    }
	
    //physics engine updates
	void FixedUpdate () {
        Move();
	}

    //movement function

    void Move()
    {
        Vector3 moveVelocity = Vector3.zero;
        string dist = "";

        //trace or random
        if (isTracing)
        {
            Vector3 playerPos = traceTarget.transform.position;

            if (playerPos.x < transform.position.x)
                dist = "Left";
            else if (playerPos.x > transform.position.x)
                dist = "Right";
        }

        else
        {
            if (movementFlag == 1)
            {
                dist = "Left";
            }
            else if (movementFlag == 2)
            {
                dist = "Right";
            }
        }

        //movement assign
        if (dist == "Left")
        {
            moveVelocity = Vector3.left;
            transform.localScale = new Vector3(1, 1, 1);
        }

        else if (dist == "Right")
        {
            moveVelocity = Vector3.right;
            transform.localScale = new Vector3(-1, 1, 1);
        }


        transform.position += moveVelocity * movePower * Time.deltaTime;
    }

    //trace start
    void OnTriggerEnter2D (Collider2D other)
    {
        if (CreatureType == 0)
            return;
        if (other.gameObject.tag == "Player")
        {
            traceTarget = other.gameObject;
            StopCoroutine("ChangeMovement");
        }
    }

    //trace maintain
    void OnTriggerStay2D (Collider2D other)
    {
        if (CreatureType == 0)
            return;
        if (other.gameObject.tag == "Player")
        {
            isTracing=true;
        }
    }

    //trace over
    void OnTriggerExit2D (Collider2D other)
    {
        if (CreatureType == 0)
            return;
        if (other.gameObject.tag == "Player")
        {
            isTracing = false;
            StartCoroutine("ChangeMovement");
        }
    }

    public void Die()
    {
        //stop movement
        StopCoroutine("ChangeMovement");
        isDie = true;

        //flip Y axis
        transform.localScale = new Vector3(1, -1, 1);

        //falling
        BoxCollider2D coll = gameObject.GetComponent<BoxCollider2D>();
        coll.enabled = false;

        //die bouncing
        Rigidbody2D rigid = gameObject.GetComponent<Rigidbody2D>();
        Vector2 dieVelocity = new Vector2(0, 30f);
        rigid.AddForce(dieVelocity, ForceMode2D.Impulse);

        //remove object
        Destroy(gameObject, 5f);
    }
}
